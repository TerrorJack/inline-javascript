name: pipeline

on:
  - push
  - pull_request

jobs:

  nix:
    name: nix-${{ matrix.os }}-${{ matrix.ghc }}-${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-10.15
        ghc:
          - ghc8102
          - ghc884
        node:
          - nodejs-14_x
          - nodejs-12_x
          - nodejs-10_x
    env:
      ghc: ${{ matrix.ghc }}
      node: ${{ matrix.node }}
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: setup-nix
        uses: cachix/install-nix-action@v11
        with:
          nix_path: nixpkgs=./nix/nixpkgs.nix
          extra_nix_config:
            substituters = https://cache.nixos.org https://ghcide-nix.cachix.org https://iohk.cachix.org https://hydra.iohk.io
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= ghcide-nix.cachix.org-1:ibAY5FD+XWLzbLr8fxK6n8fL9zZe7jS+gYeyxyWYK5c= iohk.cachix.org-1:DpRUyj7h7V830dp/i6Nti+NEO2/nhblbov/8MW7Rqoo= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=

      - name: setup-cachix
        uses: cachix/cachix-action@master
        with:
          name: inline-js
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'

      - name: test
        run: |
          nix run -f . -i --argstr ghc $ghc --argstr node $node inline-js-tests.components.exes.inline-js-tests -c "inline-js-tests -j2"

      - name: test-nix-shell
        run: |
          nix-shell --pure --argstr ghc $ghc --argstr node $node --run "cabal v2-run inline-js-tests:inline-js-tests -- -j2"

  cabal:
    name: cabal-${{ matrix.os }}-ghc-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-10.15
          - windows-2019
        ghc:
          - 8.10.2
          - 8.8.4
    steps:

      - name: setup-haskell
        uses: actions/setup-haskell@main
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: 3.2.0.0

      - name: checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          cabal v2-build --enable-tests -j2 all

      - name: setup-node-14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14.14.0

      - name: test-node-14
        run: |
          node --version
          cabal v2-run inline-js-tests:inline-js-tests -- -j2

      - name: setup-node-13
        uses: actions/setup-node@v2-beta
        with:
          node-version: 13.14.0

      - name: test-node-13
        run: |
          node --version
          cabal v2-run inline-js-tests:inline-js-tests -- -j2

      - name: setup-node-12
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.19.0

      - name: test-node-12
        run: |
          node --version
          cabal v2-run inline-js-tests:inline-js-tests -- -j2

      - name: setup-node-10
        uses: actions/setup-node@v2-beta
        with:
          node-version: 10.22.1

      - name: test-node-10
        run: |
          node --version
          cabal v2-run inline-js-tests:inline-js-tests -- -j2

  stack:
    name: stack-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - macos-10.15
          - windows-2019
    steps:

      - name: setup-haskell
        uses: actions/setup-haskell@main
        with:
          stack-version: 2.5.1
          enable-stack: true
          stack-no-global: true

      - name: checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          stack -j2 build --test --no-run-tests

      - name: setup-node-14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14.14.0

      - name: test-node-14
        run: |
          node --version
          stack run inline-js-tests -- -j2

      - name: setup-node-13
        uses: actions/setup-node@v2-beta
        with:
          node-version: 13.14.0

      - name: test-node-13
        run: |
          node --version
          stack run inline-js-tests -- -j2

      - name: setup-node-12
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12.19.0

      - name: test-node-12
        run: |
          node --version
          stack run inline-js-tests -- -j2

      - name: setup-node-10
        uses: actions/setup-node@v2-beta
        with:
          node-version: 10.22.1

      - name: test-node-10
        run: |
          node --version
          stack run inline-js-tests -- -j2

  stack-alpine:
    name: stack-alpine
    runs-on: ubuntu-20.04
    container:
      image: alpine:edge
    steps:

      - name: checkout
        uses: actions/checkout@v2

      - name: test
        run: |
          export HOME=/root
          mkdir -p $HOME/.local/bin
          mkdir $HOME/.node
          export PATH=$HOME/.local/bin:$HOME/.node/bin:$PATH

          apk add \
            alpine-sdk \
            autoconf \
            automake \
            binutils-gold \
            coreutils \
            findutils \
            gawk \
            grep \
            ghc \
            ncurses-dev \
            sed \
            util-linux \
            xz

          mkdir $HOME/.stack
          echo "allow-different-user: true" > $HOME/.stack/config.yaml
          echo "system-ghc: true" >> $HOME/.stack/config.yaml
          curl -L https://github.com/commercialhaskell/stack/releases/download/v2.5.1/stack-2.5.1-linux-x86_64-bin -o $HOME/.local/bin/stack
          chmod +x $HOME/.local/bin/stack

          curl https://unofficial-builds.nodejs.org/download/release/v14.14.0/node-v14.14.0-linux-x64-musl.tar.xz | tar xJ -C $HOME/.node --strip 1
          node --version
          stack -j2 build --test --no-run-tests
          stack run inline-js-tests -- -j2

          rm -rf $HOME/.node/*
          curl https://unofficial-builds.nodejs.org/download/release/v13.14.0/node-v13.14.0-linux-x64-musl.tar.xz | tar xJ -C $HOME/.node --strip 1
          node --version
          stack run inline-js-tests -- -j2

          rm -rf $HOME/.node/*
          curl https://unofficial-builds.nodejs.org/download/release/v12.19.0/node-v12.19.0-linux-x64-musl.tar.xz | tar xJ -C $HOME/.node --strip 1
          node --version
          stack run inline-js-tests -- -j2

          rm -rf $HOME/.node/*
          curl https://unofficial-builds.nodejs.org/download/release/v10.22.1/node-v10.22.1-linux-x64-musl.tar.xz | tar xJ -C $HOME/.node --strip 1
          node --version
          stack run inline-js-tests -- -j2

  sdist:
    name: sdist
    runs-on: ubuntu-20.04
    steps:

      - name: setup-haskell
        uses: actions/setup-haskell@main
        with:
          ghc-version: 8.10.2
          cabal-version: 3.2.0.0

      - name: checkout
        uses: actions/checkout@v2

      - name: sdist
        run: |
          pushd inline-js
          cabal check
          popd

          pushd inline-js-core
          cabal check
          popd

          pushd inline-js-examples
          cabal check
          popd

          pushd inline-js-tests
          cabal check
          popd

          cabal v2-sdist \
            all

      - name: upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: sdist
          path: dist-newstyle/sdist/*.tar.gz

  haddock:
    name: haddock
    runs-on: ubuntu-20.04
    steps:

      - name: setup-haskell
        uses: actions/setup-haskell@main
        with:
          ghc-version: 8.10.2
          cabal-version: 3.2.0.0

      - name: checkout
        uses: actions/checkout@v2

      - name: haddock
        run: |
          cabal v2-haddock \
            --haddock-for-hackage \
            --haddock-hyperlink-source \
            --haddock-quickjump \
            -j2 \
            all

      - name: upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: haddock
          path: dist-newstyle/*-docs.tar.gz

  docs:
    name: docs
    runs-on: ubuntu-20.04
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    steps:

      - name: setup-haskell
        uses: actions/setup-haskell@main
        with:
          stack-version: 2.5.1
          enable-stack: true
          stack-no-global: true

      - name: setup-node-14
        uses: actions/setup-node@v2-beta
        with:
          node-version: 14.14.0

      - name: setup-deps
        run: |
          npm install -g \
            netlify-cli

      - name: checkout
        uses: actions/checkout@v2

      - name: build
        run: |
          stack -j2 build --haddock

          if [ ! -z "$NETLIFY_AUTH_TOKEN" ]
          then
            if [ $(git rev-parse --abbrev-ref HEAD) = "master" ]
            then
              netlify deploy --dir $(stack path --local-doc-root) --message "$GITHUB_REF-$GITHUB_SHA" --prod
            else
              netlify deploy --dir $(stack path --local-doc-root) --message "$GITHUB_REF-$GITHUB_SHA"
            fi
          fi
